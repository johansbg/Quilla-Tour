{"version":3,"sources":["components/home/sectionOneComponent.jsx","views/home.jsx","views/main.jsx","App.js","reportWebVitals.js","index.js"],"names":["sectionOneComponent","home","scrollOverflow","sectionsColor","onLeave","origin","destination","direction","console","log","index","bind","this","afterLoad","render","state","fullpageApi","id","className","onClick","moveTo","main","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"2RAQeA,MANf,WACE,OACE,iDCgDWC,MA7Cf,WASI,OACE,cAAC,IAAD,CACEC,gBAAgB,EAChBC,cAAe,CAAC,SAAU,SAAU,SACpCC,QAXY,SAACC,EAAQC,EAAaC,GAClCC,QAAQC,IAAI,mBAAqBJ,EAAOK,QAUvBC,KAAKC,MACtBC,UATc,SAACR,EAAQC,EAAaC,GACpCC,QAAQC,IAAI,eAAiBH,EAAYI,QAQpBC,KAAKC,MAC1BE,OAAQ,YAA4B,EAAzBC,MAA0B,IAAnBC,EAAkB,EAAlBA,YAChB,OACE,sBAAKC,GAAG,mBAAR,UACE,qBAAKC,UAAU,mBAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,QAAf,SACE,6CAEF,qBAAKA,UAAU,QAAf,SACE,6CAEF,qBAAKA,UAAU,QAAf,SACE,gDAGJ,sBAAKA,UAAU,UAAf,UACE,2CACA,wBAAQC,QAAS,kBAAMH,EAAYI,OAAO,EAAG,IAA7C,gC,OCtBDC,MAVf,WACE,OACE,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACI,cAAC,EAAD,SCCGC,MAVf,WACE,OACE,cAAC,IAAD,UACE,8BACI,cAAC,EAAD,SCIKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASnB,OACP,cAAC,IAAMoB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bca43fbe.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction sectionOneComponent() {\r\n  return (\r\n    <h3>Barranquilla 1</h3>\r\n  );\r\n}\r\n\r\nexport default sectionOneComponent;\r\n","import React from \"react\";\r\nimport \"fullpage.js/vendors/scrolloverflow\"; // Optional. When using scrollOverflow:true\r\nimport ReactFullpage from \"@fullpage/react-fullpage\";\r\n\r\n//Components\r\nimport SectionOneComponent from './../components/home/sectionOneComponent'\r\n\r\nfunction home() {\r\n\r\n    const onLeave = (origin, destination, direction) => {\r\n        console.log(\"Leaving section \" + origin.index);\r\n    }\r\n    const afterLoad = (origin, destination, direction) => {\r\n        console.log(\"After load: \" + destination.index);\r\n    }\r\n\r\n    return (\r\n      <ReactFullpage\r\n        scrollOverflow={true}\r\n        sectionsColor={[\"orange\", \"purple\", \"green\"]}\r\n        onLeave={onLeave.bind(this)}\r\n        afterLoad={afterLoad.bind(this)}\r\n        render={({ state, fullpageApi }) => {\r\n          return (\r\n            <div id=\"fullpage-wrapper\">\r\n              <div className=\"section section1\">\r\n                <SectionOneComponent />\r\n              </div>\r\n              <div className=\"section\">\r\n                <div className=\"slide\">\r\n                  <h3>Slide 2.1</h3>\r\n                </div>\r\n                <div className=\"slide\">\r\n                  <h3>Slide 2.2</h3>\r\n                </div>\r\n                <div className=\"slide\">\r\n                  <h3>Slide 2.3</h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"section\">\r\n                <h3>Section 3</h3>\r\n                <button onClick={() => fullpageApi.moveTo(1, 0)}>\r\n                  Move top\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n    );\r\n}\r\n\r\nexport default home;\r\n","import React from \"react\";\r\nimport Home from \"./home\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    withRouter\r\n} from \"react-router-dom\";\r\n\r\nfunction main() {\r\n  return (\r\n    <Switch>\r\n        <Route path=\"/\">\r\n            <Home />\r\n        </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default main;\r\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Main from \"./views/main\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n          <Main />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/css/styles.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}